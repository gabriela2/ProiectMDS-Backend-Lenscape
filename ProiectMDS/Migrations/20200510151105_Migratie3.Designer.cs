// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProiectMDS.Contexts;

namespace ProiectMDS.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20200510151105_Migratie3")]
    partial class Migratie3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProiectMDS.Models.Categorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descriere");

                    b.Property<string>("NumeCategorie");

                    b.Property<string>("Specificatii");

                    b.HasKey("Id");

                    b.ToTable("Categorie");
                });

            modelBuilder.Entity("ProiectMDS.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa");

                    b.Property<DateTime>("DataNasterii");

                    b.Property<string>("Email");

                    b.Property<string>("Nume");

                    b.Property<string>("Parola");

                    b.Property<int?>("TipClientId");

                    b.Property<int>("TipId");

                    b.HasKey("Id");

                    b.HasIndex("TipClientId");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("ProiectMDS.Models.ComandaEchipament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantitate");

                    b.Property<int>("ComenziId");

                    b.Property<int>("EchipamentId");

                    b.HasKey("Id");

                    b.HasIndex("ComenziId");

                    b.HasIndex("EchipamentId");

                    b.ToTable("ComandaEchipament");
                });

            modelBuilder.Entity("ProiectMDS.Models.Comenzi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClientId");

                    b.Property<int>("MagazinId");

                    b.Property<float>("SumaTotala");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("MagazinId");

                    b.ToTable("Comenzi");
                });

            modelBuilder.Entity("ProiectMDS.Models.Echipament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnAparitie");

                    b.Property<string>("Descriere");

                    b.Property<string>("NumeEchipament");

                    b.Property<float>("Pret");

                    b.Property<int>("ProducatorId");

                    b.Property<string>("Specificatii");

                    b.Property<string>("img");

                    b.HasKey("Id");

                    b.HasIndex("ProducatorId");

                    b.ToTable("Echipament");
                });

            modelBuilder.Entity("ProiectMDS.Models.EchipamentCategorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategorieId");

                    b.Property<int>("EchipamentId");

                    b.HasKey("Id");

                    b.HasIndex("CategorieId");

                    b.HasIndex("EchipamentId");

                    b.ToTable("EchipamentCategorie");
                });

            modelBuilder.Entity("ProiectMDS.Models.Magazin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa");

                    b.Property<string>("Nume");

                    b.HasKey("Id");

                    b.ToTable("Magazin");
                });

            modelBuilder.Entity("ProiectMDS.Models.MagazinEchipament", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EchipamentId");

                    b.Property<int>("MagazinId");

                    b.Property<float>("Stoc");

                    b.HasKey("Id");

                    b.HasIndex("EchipamentId");

                    b.HasIndex("MagazinId");

                    b.ToTable("MagazinEchipament");
                });

            modelBuilder.Entity("ProiectMDS.Models.Producator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NumeProducator");

                    b.Property<string>("TaraOrigine");

                    b.HasKey("Id");

                    b.ToTable("Producator");
                });

            modelBuilder.Entity("ProiectMDS.Models.TipClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descriere");

                    b.Property<int>("Discount");

                    b.HasKey("Id");

                    b.ToTable("TipClient");
                });

            modelBuilder.Entity("ProiectMDS.Models.Client", b =>
                {
                    b.HasOne("ProiectMDS.Models.TipClient", "TipClient")
                        .WithMany("Client")
                        .HasForeignKey("TipClientId");
                });

            modelBuilder.Entity("ProiectMDS.Models.ComandaEchipament", b =>
                {
                    b.HasOne("ProiectMDS.Models.Comenzi", "Comenzi")
                        .WithMany("ComandaEchipament")
                        .HasForeignKey("ComenziId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProiectMDS.Models.Echipament", "Echipament")
                        .WithMany("ComandaEchipament")
                        .HasForeignKey("EchipamentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProiectMDS.Models.Comenzi", b =>
                {
                    b.HasOne("ProiectMDS.Models.Client", "Client")
                        .WithMany("Comenzi")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProiectMDS.Models.Magazin", "Magazin")
                        .WithMany("Comenzi")
                        .HasForeignKey("MagazinId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProiectMDS.Models.Echipament", b =>
                {
                    b.HasOne("ProiectMDS.Models.Producator", "Producator")
                        .WithMany("Echipament")
                        .HasForeignKey("ProducatorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProiectMDS.Models.EchipamentCategorie", b =>
                {
                    b.HasOne("ProiectMDS.Models.Categorie", "Categorie")
                        .WithMany("EchipamentCategorie")
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProiectMDS.Models.Echipament", "Echipament")
                        .WithMany("EchipamentCategorie")
                        .HasForeignKey("EchipamentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ProiectMDS.Models.MagazinEchipament", b =>
                {
                    b.HasOne("ProiectMDS.Models.Echipament", "Echipament")
                        .WithMany()
                        .HasForeignKey("EchipamentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ProiectMDS.Models.Magazin", "Magazin")
                        .WithMany("MagazinEchipament")
                        .HasForeignKey("MagazinId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
